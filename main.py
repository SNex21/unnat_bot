from aiogram import Dispatcher, Bot, types
from dotenv import load_dotenv
import os
from aiogram.filters.command import Command
from aiogram.enums import ParseMode
from read1 import create_db
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from aiogram import F


load_dotenv()

bot = Bot(token=os.getenv('BOT_API'))
dp = Dispatcher(bot=bot)

skb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üí• –ü–æ–µ—Ö–∞–ª–∏!', callback_data='poex')]])
kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=i, callback_data='ism')] for i in create_db()])
ism_kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='üß≠ –°—Ö–µ–º–∞ –ø–∞—Ä–∫–∞', callback_data='schema')],[InlineKeyboardButton(text='üèÉ –ó–û–ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', callback_data='zozh')],[InlineKeyboardButton(text='üå± –≠–ö–û –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', callback_data='eko')],[InlineKeyboardButton(text='üñåÔ∏è –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–µ–∫—Ç—ã', callback_data='poject')] ,[InlineKeyboardButton(text='‚ùì –ö–≤–∏–∑', callback_data='queeze')] ,[InlineKeyboardButton(text='üîé –ò—â–µ–º —Å–æ–∫—Ä–æ–≤–∏—â–∞', callback_data='sokr')],[InlineKeyboardButton(text='üí° –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤', callback_data='inter')]])
ret_kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='ism')]])
del_kb = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data='del')]])



@dp.message(Command('start'))
async def start(message: types.Message):
    await message.answer('<b>–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç "–í—Å–µ –≤ –ø–∞—Ä–∫!</b>".\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–∫–∞—Ö –ú–æ—Å–∫–≤—ã!\n\n<b>–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!</b>', parse_mode=ParseMode.HTML, reply_markup=skb)


@dp.callback_query(F.data == 'poex')
async def ismail_park(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç "–í—Å–µ –≤ –ø–∞—Ä–∫!</b>".\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ä–∫–∞—Ö –ú–æ—Å–∫–≤—ã!\n\n<b>–í—ã–±–µ—Ä–µ—Ç–µ –ø–∞—Ä–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞</b>', parse_mode=ParseMode.HTML, reply_markup=kb)


@dp.callback_query(F.data == 'ism')
async def ismail_park1(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ò–∑–º–∞–π–ª–æ–≤—Å–∫–∏–π –ø–∞—Ä–∫!</b>', parse_mode=ParseMode.HTML, reply_markup=ism_kb)


@dp.callback_query(F.data == 'schema')
async def ismail_park2(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–°—Ö–µ–º—É –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ:\n https://moskvapark.naidich.ru/izmailovo/shemabig.htm</b>', parse_mode=ParseMode.HTML, reply_markup=ret_kb)


@dp.callback_query(F.data == 'zozh')
async def ismail_park3(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–ë–µ–≥–∞–π—Ç–µ –ø–æ –ø–∞—Ä–∫—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –±—É–¥–µ—Ç–µ –∑–¥–æ—Ä–æ–≤—ã!</b>', parse_mode=ParseMode.HTML, reply_markup=ret_kb)


@dp.callback_query(F.data == 'eko')
async def ismail_park4(cb: types.CallbackQuery):
    photo = FSInputFile(r'C:\Users\Producer\Desktop\UnnatBot\—ã.png')

    await cb.message.answer_photo(photo=photo, caption='–û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø—Ä–∏—Ä–æ–¥–µ –≤–µ–∂–ª–∏–≤–æ!', reply_markup=del_kb)


@dp.callback_query(F.data == 'project')
async def ismail_park5(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–ú–µ–≥–∞ –ø—Ä–æ–µ–∫—Ç</b>', parse_mode=ParseMode.HTML, reply_markup=ret_kb)


@dp.callback_query(F.data == 'queeze')
async def ismail_park6(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–ö–≤–∏–∑—ã</b>', parse_mode=ParseMode.HTML, reply_markup=ret_kb)


@dp.callback_query(F.data == 'sokr')
async def ismail_park7(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–ù–∞–π–¥–∏ –≤—Å–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞ –ø–∞—Ä–∫–∞!</b>', parse_mode=ParseMode.HTML, reply_markup=ret_kb)


@dp.callback_query(F.data == 'inter')
async def ismail_park8(cb: types.CallbackQuery):
    await cb.message.edit_text('<b>–ü—Ä–∏—Ö–æ–¥–∏ –Ω–∞ –Ω–∞—à–∏ —Å—É–±–±–æ—Ç–Ω–∏–∫–∏!</b>', parse_mode=ParseMode.HTML, reply_markup=ret_kb)


@dp.callback_query(F.data == 'del')
async def ismail_park9(cb: types.CallbackQuery):
    await bot.delete_message(cb.message.chat.id, cb.message.message_id) 


if __name__=='__main__':
    dp.run_polling(bot)